name: CI/CD Pipeline

on:
  push:
    branches:
      - test
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up environment variables
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AZURE_SSH_PRIVATE_KEY }}

      - name: Deploy to Azure
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}
        run: |
          echo "DB_USER: $DB_USER"
          echo "DB_HOST: $DB_HOST"
          echo "DB_NAME: $DB_NAME"
          echo "DB_PASSWORD: $DB_PASSWORD"
          echo "DB_PORT: $DB_PORT"
          
          # Despliegue en Azure
          ssh -o StrictHostKeyChecking=no azureuser@${{ secrets.AZURE_IP }} "
            echo 'Configurando variables de entorno en el servidor remoto'
            echo 'export DB_USER=${DB_USER}' | sudo tee -a /etc/environment
            echo 'export DB_HOST=${DB_HOST}' | sudo tee -a /etc/environment
            echo 'export DB_NAME=${DB_NAME}' | sudo tee -a /etc/environment
            echo 'export DB_PASSWORD=${DB_PASSWORD}' | sudo tee -a /etc/environment
            echo 'export DB_PORT=${DB_PORT}' | sudo tee -a /etc/environment
            source /etc/environment &&
            cd /home/BackEnd/documentsAppBack &&
            sudo git pull origin main &&
            sudo npm install --production &&
            sudo pm2 restart all
          "
